import json
import numpy as np

with open("C:/Users/akost/PycharmProjects/Projekt_walidacja_intel/data.json", 'r') as f:
    data = f.read()
python_obj = json.loads(data)

def sets_id(a):
    set_id = set()
    for i in range(len(python_obj[a])):
        set_id.add(python_obj[a][i]['id'])
    return set_id

def lista_id(a):
    list_id = []
    for i in range(len(python_obj[a])):
        list_id.append(python_obj[a][i]['id'])
    return list_id

def unique_id(a):
    l=[]
    list_id = lista_id(a)
    set_id = sets_id(a)

    if len(list_id) != len(set_id):
        p=[]
        for i in list_id:
            p.append(list_id.count(i))
        for i in range(len(p)):
            if p[i] > 1:
                l.append((python_obj[a][i]))
    return l

lista_sekcje = ["images", "licenses", "annotations", "categories"]

for i in lista_sekcje:
    l = unique_id(i)
    if len(l) != 0:
        for a in range(len(l)):
            print("Nieunikalne id! \nNieunikalna wartość id w sekcji", i,"w fragmencie:", l[a])

def same_id(a, b, c):
    list_id = np.array(lista_id(a))
    y = []
    for i in range(len(python_obj[b])):
        x = python_obj[b][i][c]
        if x not in list_id:
            y.append(python_obj[b])
    return y

lista_same = [('categories', 'annotations', 'category_id'),('images', 'annotations', 'image_id'),('licenses', 'images', 'license')]

for i in lista_same:
    y = same_id(i[0],i[1],i[2])
    if len(y) != 0:
        for a in range(len(y)):
           print("Brak wartości", i[2],"( sekcja",i[1],") w bazie id z sekcji",i[2],"! \nbłąd w fragmencie:", y[a],"\n")
